#!/usr/bin/env bash

disc_free.py
echo "waiting: $(find . "Link to makeMKV_out"/ -maxdepth 1 -type f \( -iname "*.mkv" -o -iname "*.mp4" -o -iname "*.ogg" -o -iname "*.webm" -o -iname "*.opus" -o -iname "*.m4a" \) -exec du -cB GiB {} + 2> /dev/null| tail -n 1)"

running=$(find -- *.working 2>/dev/null|wc -l)
executing=$(find -- *.log 2>/dev/null|wc -l)

today=$(date +"%Y-%m-%d")

done_mp4=$(find "normalized_${today}"/*.mp4 2>/dev/null|wc -l)
done_mkv=$(find "normalized_${today}"/*.mkv 2>/dev/null|wc -l)
done_ogg=$(find "normalized_${today}"/*.ogg 2>/dev/null|wc -l)
done_webm=$(find "normalized_${today}"/*.webm 2>/dev/null|wc -l)
done_opus=$(find "normalized_${today}"/*.opus 2>/dev/null|wc -l)
done_m4a=$(find "normalized_${today}"/*.m4a 2>/dev/null|wc -l)
done_files_count=$((done_mp4 + done_mkv + done_ogg + done_webm + done_opus + done_m4a))

done_count=$( [ -f ".total_streams_done.txt" ] && cat ".total_streams_done.txt" || echo 0 )
remaining=$( [ -f ".total_streams_remaining.txt" ] && cat ".total_streams_remaining.txt" || echo 0 )
total=$(echo "$done_count + $remaining" | bc)

run_norm=""
if [ "$running" -gt 0 ] ; then
    if [ "$total" -gt 0 ] ; then
        run_norm="${run_norm} ${running}S Run = $(echo "scale=2; 100 * $running / $total" | bc ) %"
    else
        run_norm="${run_norm} ${running}S Run"
    fi
fi

if [ "$executing" -gt 0 ] ; then
    run_norm="${run_norm} | ${executing}X"
fi

if [ "$running" -gt 0 ] || [ "$executing" -gt 0 ] ; then
    echo "$run_norm" |figlet -ct -f blk
fi

if [ -f ".total_streams_remaining.txt" ]; then
    streams_waiting="$(echo "$(cat ".total_streams_remaining.txt")" -"$running" | bc)"
    if [ "$streams_waiting" -gt 0 ] ; then
        echo "${streams_waiting}S Wait = $(echo "scale=2; 100 * $streams_waiting / $total" | bc ) %"|figlet -ct -f blk
    fi
fi

if [ "$total" -gt 0 ] ; then
    if [ "$done_count" -gt 0 ] ; then
        echo "${done_count}S Done = $(echo "scale=2; 100 * $done_count / $total" | bc ) % | ${done_files_count}F"|figlet -ct -f blk
    fi
fi

# width=$(echo $COLUMNS / 2 | bc)
var=".list_watch_remaining_output"
rm -f $var
touch $var
find . "Link to makeMKV_out"/ -maxdepth 1 \( -name "*.log" \) 2> /dev/null | while read -r fname; do
    tail_log=$(tail -n 1 "${fname}" | sed "s,\x1B\[[0-9;]*[a-zA-Z],,g")
    echo "$tail_log ${fname}" | format_normalize_progress.py | grep -v '^\s*$' >> $var
done

export LC_ALL=C
cat $var | sed 'h;s/\x1b[[0-9;]*m//g;s/▏/ /g;s/▎/ /g;s/▍/ /g;s/▌/ /g;s/▋/ /g;s/▊/ /g;s/▉/ /g;s/█/ /g;G;s/\n/\t/' | sort | cut -f2-  # https://stackoverflow.com/a/29401114
rm -f $var

echo "$PWD"
screen -ls

normalize_remaining_print.py

ls_multi_folder.py "normalized_${today}" "normalized_${today}_done" "normalized_${today}_staging" "normalized_${today}_temp" "normalized_${today}_temp_single_staging" "normalized_${today}_temp_single"|column -t -s $'\t'
