#!/usr/bin/env bash

# make callable from anywhere
cd "$( dirname "${BASH_SOURCE[0]}" )"

echo ""

# removed -s option from curl
state_json=$(curl --connect-timeout 1 --max-time 1 --retry 60 --retry-delay 0 --retry-max-time 60 -X GET --url $(cat ~/settings/hue_lights_secret)/lights/$1)
echo $state_json
is_on=$(echo $state_json | jq -r '.state.on')
light_name=$(echo $state_json | jq -r '.name')

echo is_on $is_on
echo light_name $light_name

if [ -z ${2} ]; then
    if [ $is_on == "true" ]; then
        next_on_off_state="false"
    elif [ $is_on == "false" ]; then
        next_on_off_state="true"
    fi
else
    if [ $2 == "on" ]; then
        next_on_off_state="true"
    elif [ $2 == "off" ]; then
        next_on_off_state="false"
    else
        next_on_off_state=$2
    fi
fi

# removed -s option from curl
post_return=$(curl --connect-timeout 1 --max-time 1 --retry 60 --retry-delay 0 --retry-max-time 60 -X PUT --data "{\"on\":$next_on_off_state}" --url $(cat ~/settings/hue_lights_secret)/lights/$1/state)
echo post_return $post_return
success=$(echo ${post_return:1:-1} | jq -r '.success')
echo success $success

if [[ "null" != $success ]]; then
    echo -n \"$light_name\"
    if [ -z ${2} ]; then
        echo -n " toggled to "
    else
        echo -n " is now "
    fi
    if [ $next_on_off_state == "true" ]; then
        echo on
    else
        echo off
    fi
else
    echo failed to change light $1
    exit 1
fi

exit 0
